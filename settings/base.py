"""
Django settings for geosmBackend project.

Generated by 'django-admin startproject' using Django 3.1.1.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""

import os
from pathlib import Path

from qgis.core import QgsApplication

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/


# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "django.contrib.gis",
    "django_extensions",
    "corsheaders",
    "django_elasticsearch_dsl",
    "cuser",
    "tracking_fields",
    "genericIcon",
    "account",
    "djoser",
    "rest_framework",
    "rest_framework.authtoken",
    "rest_framework_simplejwt",
    "drf_yasg",
    "osm",
    "provider",
    "group",
    "parameter",
    "tracking",
]

REST_FRAMEWORK = {
    "DEFAULT_AUTHENTICATION_CLASSES": [
        "rest_framework_simplejwt.authentication.JWTAuthentication",
    ],
    "EXCEPTION_HANDLER": "geosmBackend.custom_exception_handler.custom_exception_handler",
}

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "corsheaders.middleware.CorsMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "cuser.middleware.CuserMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ELASTICSEARCH_DSL = {
    "default": {"hosts": "elastic:9200"},
}
ELASTICSEARCH_DSL_AUTOSYNC = False

DJOSER = {
    "SERIALIZERS": {"user_create": "account.serializers.UserRegistrationSerializer"}
}

CORS_ALLOWED_ORIGINS = ["http://localhost:4200", "http://127.0.0.1:9000"]

CORS_ALLOW_METHODS = [
    "DELETE",
    "GET",
    "OPTIONS",
    "PATCH",
    "POST",
    "PUT",
]


ROOT_URLCONF = "geosmBackend.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "geosmBackend.wsgi.application"


# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases


# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]

DEFAULT_AUTO_FIELD = "django.db.models.AutoField"
# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

STATIC_URL = "/static/"
AUTH_USER_MODEL = "account.User"

MEDIA_URL = "/icons/"
MEDIA_ROOT = os.path.join(BASE_DIR, "icons")
TEMP_URL = os.path.join(MEDIA_ROOT, "temp")
STATIC_ROOT = BASE_DIR / "staticfiles"
# Swagger settings
SWAGGER_SETTINGS = {
    "DEFAULT_INFO": "geosmBackend.urls.swagger_api_info",
    # Renseigner plus tard les bonnes urls
    "LOGIN_URL": "/auth/jwt/create/",
    "LOGOUT_URL": "/auth/users/logout/",
    "USE_SESSION_AUTH": True,
    "REFETCH_SCHEMA_WITH_AUTH": True,
    "REFETCH_SCHEMA_ON_LOGOUT": True,
    "enabled_methods": ["get", "post", "put", "delete"],
    "SECURITY_DEFINITIONS": {
        "Basic": {"type": "basic"},
        "Bearer": {"type": "apiKey", "name": "Authorization", "in": "header"},
    },
    #    'DEFAULT_API_URL': 'https://tiles.dataosm.info/',
    "REFETCH_SCHEMA_WITH_AUTH": True,
    # Document que le swagger doit charger
    #'SPEC_URL': 'https://tiles.dataosm.info/',
}

REDOC_SETTINGS = {
    "LAZY_RENDERING": False,
}

os.environ["QT_QPA_PLATFORM"] = "offscreen"
QgsApplication.setPrefixPath("/usr/", True)
QGS = QgsApplication([], False)
QGS.initQgis()
